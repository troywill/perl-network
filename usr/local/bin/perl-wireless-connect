#!/usr/bin/env perl
use warnings;
use strict;
use constant WIRELESS_FILE => '/usr/local/etc/wireless/00';
use constant WIRELESS_INTERFACE => 'wlan0';
my $SCAN_COMMAND = "iwlist " . WIRELESS_INTERFACE . " scanning";

my ( %known_macs, %known_essids ) = &known_networks();
print "\n.... Scanning for available networks ...\n";
my @network_scan = `$SCAN_COMMAND`;
my %available_macs = &available_networks(@network_scan);

foreach my $mac ( keys %known_macs ) {
  if ( $available_macs{$mac} ) {
    print "=> Network '$available_macs{$mac}{essid}' found...\n";
    &connect_to_network( $mac, %available_macs );
  }
}

sub connect_to_wep {
    my ($key, $essid) = @_;
    print "Do not connect if connected!!!!\n";
#    system("/usr/sbin/iwconfig wlan0 key $key");
#    system("/usr/sbin/iwconfig wlan0 essid $essid");
}

sub connect_to_network {
  my ( $mac, %HoH ) = @_;
  print "ESSID: $HoH{$mac}{essid}\n";
  print "ENCRYPTION: $HoH{$mac}{encryption}\n";
  print "QUALITY: $HoH{$mac}{quality}\n";
  print "SECURITY: $HoH{$mac}{security}\n";
  if ( $HoH{$mac}{security} eq 'WEP') {
      &connect_to_wep( $HoH{$mac}{key}, $HoH{$mac}{essid} );
  }
}

# Read mac, essid from file
sub known_networks {
  my %HoN;
  open my $fh, "<", WIRELESS_FILE;
  while (<$fh>) {
    chomp;
    my ( $mac, $essid, $key, $security_type ) = split /,/;
    $HoN{$mac}{essid} = $essid;
    $HoN{$mac}{key} = $key;
  }
  return ( %HoN, %HoN );
}

sub available_networks {
  my @scan = @_;
  my ( %cell, %HoC, $mac, $security_type );
  foreach (@scan) {
    if ( m/^\s+Cell\s+\d+\s+-*\s*Address:\s*(([0-9a-fA-F]{2}[:-]{1}){5}([0-9a-fA-F]{2}))/ ) {
      $mac = $1;
      %cell = ( mac  => $mac );
      $security_type = '';
    } elsif (m/^\s*ESSID:*\"(.*?)\"/ ) {
      $HoC{$mac}{essid} = $1;
    } elsif ( m/^\s*Quality=(\d+)\/(\d+)\s*/ ) {
      $HoC{$mac}{quality} = $1;
    } elsif ( m/^\s*Encryption key:(.*?)$/ ) {
      $HoC{$mac}{encryption} = $1;
      # security type
    } elsif ( m/IEEE 802.11i\/WPA2 Version 1/ ) {
      $security_type .= "[WPA2]";
      $HoC{$mac}{security} = $security_type;
    } elsif ( m/WPA Version 1/ ) {
      $security_type .= "[WPA]";
      $HoC{$mac}{security} = $security_type;
    }
  }
  # iwlist scanning does not indicate explicitly when a network is using WEP security
  # Let's deduce this by checking if security is on and WPA or WPA are not involved
  foreach $mac ( keys %HoC ) {
    if ( $HoC{$mac}{security} ) {
    } elsif ( $HoC{$mac}{encryption} eq 'off' ) {
      $HoC{$mac}{security} = 'off';
    } else {
      $HoC{$mac}{security} = 'WEP';
    }
  }
  return %HoC;
}    
print `date`;
